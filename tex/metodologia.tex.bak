%Quais os principais passos previstos (com uma breve descrição)
%para execução do projeto? Como pretende-se abordar o problema?
%
%two parts parser
%  lexer -> parser
%
%  criando tokens eh possivel categorizar de antemao todos os elementos da eq e em seguida alimentar o parser de forma mais simples
%
%good source: https://tomassetti.me/parsing-in-python/
%
%############################################################
%ROADMAP:
%  simple lexer = done?
%  parser          = done
%  old metrics
%  new metrics
%  composition operators
%  make a better lexer :)

O projeto consiste em implementar as ferramentas e analisar a diferença entre a aproximação do vazamento, usando os operadores, e o cálculo exato feito diretamente no canal.

A primeira parte do projeto é implementar uma biblioteca em C++ que contenha o ferramental mínimo para fazer a analise. Essa biblioteca vai conter:

\begin{itemize}
  \item{Parser}
  \item{Estrutura do canal}
  \item{Métricas antigas}
  \item{Métricas novas}
  \item{Operadores de composição}
\end{itemize}

Um Parser foi implementado para permitir operações de composição com vários canais de forma simples. O canal vai ser definido como uma classe onde as métricas e operadores serão métodos.

A segunda parte é analisar a efetividade dos operadores de composição, dado que a maior dificuldade do processo de medir o vazamento de informação é a propria modelagem do sistema. 
% TODO
%Dessa forma, ter um metodo aproximativo onde é possivel construir o sistema de forma modular e derivar o canal 
